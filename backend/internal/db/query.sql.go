// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertDeviceMeasurement = `-- name: InsertDeviceMeasurement :exec
INSERT INTO device_measurement (device_id, water_level, voltage, received_at) VALUES ($1, $2, $3, $4)
`

type InsertDeviceMeasurementParams struct {
	DeviceID   pgtype.UUID
	WaterLevel float64
	Voltage    float64
	ReceivedAt pgtype.Timestamptz
}

func (q *Queries) InsertDeviceMeasurement(ctx context.Context, arg InsertDeviceMeasurementParams) error {
	_, err := q.db.Exec(ctx, insertDeviceMeasurement,
		arg.DeviceID,
		arg.WaterLevel,
		arg.Voltage,
		arg.ReceivedAt,
	)
	return err
}

const updateDeviceMinimumLevel = `-- name: UpdateDeviceMinimumLevel :one
UPDATE device SET minimum_level = $2 WHERE device_eui = $1 RETURNING id
`

type UpdateDeviceMinimumLevelParams struct {
	DeviceEui    string
	MinimumLevel float64
}

func (q *Queries) UpdateDeviceMinimumLevel(ctx context.Context, arg UpdateDeviceMinimumLevelParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, updateDeviceMinimumLevel, arg.DeviceEui, arg.MinimumLevel)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}
