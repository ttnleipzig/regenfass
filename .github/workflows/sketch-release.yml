name: Sketch - release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: write
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ["heltec_wifi_lora_32_V3_HCSR04"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build firmware
        run: pio run -e ${{ matrix.environment }}

      - name: Extract firmware metadata
        run: >-
          pio project metadata -e '${{ matrix.environment }}' --json-output |
           jq '.${{ matrix.environment }}.extra' > .pio/build/${{ matrix.environment }}/firmware_metadata.json

      - name: Move files to artifacts
        run: >-
          mkdir -p artifacts &&
          mv .pio/build/${{ matrix.environment }}/firmware.bin artifacts/ &&
          mv .pio/build/${{ matrix.environment }}/partitions.bin artifacts/ &&
          mv .pio/build/${{ matrix.environment }}/bootloader.bin artifacts/ &&
          mv .pio/build/${{ matrix.environment }}/firmware_metadata.json artifacts/ &&
          cp ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin artifacts/

      - uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.environment }}
          path: |
            artifacts/*

  release:
    name: 📦 Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      pull-requests: write
    env:
      RELEASE_PLEASE_DEBUG: true
    outputs:
      upload-url: ${{ steps.release.outputs.upload_url }}
    steps:
      - uses: googleapis/release-please-action@v3.7.6
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: simple
      - name: Print the release URL if present
        if: ${{ steps.release.outputs.upload_url }}
        run: |
          echo "Upload URL: ${{ steps.release.outputs.upload_url }}"

  upload:
    name: 💾 Upload Artifacts
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.upload-url }}
    needs: release
    strategy:
      matrix:
        environment: ["heltec_wifi_lora_32_V3_HCSR04"]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: firmware
          pattern: firmware-${{ matrix.environment }}
          merge-multiple: true
      - name: ZIP firmware
        run: |
          cd firmware
          zip -r firmware-${{ matrix.environment }}.zip ./*.bin ./*.json

      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: firmware/firmware-${{ matrix.environment }}.zip
          asset_name: regenfass-${{ matrix.environment }}.zip
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com
    steps:
      - name: deploy
        run: echo "Deployed!"
