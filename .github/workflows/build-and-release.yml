name: Build Environments

on: [push, pull_request]

permissions:
  contents: read # for checkout
  packages: write
  actions: write # for cache

jobs:
  build:
    name: Build Environments
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment: ["heltec_wifi_lora_32_V3_HCSR04"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio
      - name: Build firmware
        run: pio run -e ${{ matrix.environment }}
      - uses: actions/upload-artifact@v2
        with:
          name: firmware-${{ matrix.environment }}
          path: |
            .pio/build/${{ matrix.environment }}/*.bin
      - uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: firmware-release
          path: .pio/build/${{ matrix.environment }}/*.bin

  #  release:
  #    name: Create Release
  #    runs-on: ubuntu-latest
  #    needs: [build]
  #    if: startsWith(github.ref, 'refs/tags/')
  #    steps:
  #      - uses: actions/download-artifact@v2
  #        with:
  #          name: firmware-release
  #      - name: Create draft release
  #        uses: softprops/action-gh-release@v1
  #        with:
  #          draft: True
  #          files: |
  #            *.bin
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #

  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref =='refs/heads/main'
    steps:
      - uses: google-github-actions/release-please-action@v4
        name: Create Release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: simple
      - uses: actions/download-artifact@v2
        name: Download Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: firmware-release

      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./firmware-release/*.bin
